{"version":3,"sources":["getWeb3.js","Components/HeaderComponent.js","Components/HomeComponent.js","Components/AllCollegeComponent.js","Components/FooterComponent.js","Components/AllStudentComponent.js","Components/MainComponents.js","App.js","serviceWorker.js","index.js"],"names":["getWeb3","Promise","resolve","reject","window","addEventListener","a","ethereum","web3","Web3","enable","console","log","provider","providers","HttpProvider","Header","props","conver","x","utils","toWei","converb","fromWei","state","isNavOpen","togglenav","bind","this","setState","Fragment","Navbar","dark","expand","className","NavbarToggler","onClick","NavbarBrand","Collapse","isOpen","navbar","Nav","NavItem","style","width","justifyContent","to","color","accounts","balance","toString","Component","Home","selectedFile","Container","Allpatrender","togglereg","art","isregistered","contract","methods","registerCollege","clg_id","send","from","gas","docCount","isModalOpen","sellPrice","toggleModal","handleInputChange","event","target","value","name","butname","Card","CardBody","CardTitle","CardText","clg_address","clg_name","Button","type","AllCllgComponent","creatingItems","addCollege","clgname","res","toggleModal1","fileSelectHandler","files","cust","manuf","isModalOpen1","title","artUrl","price","artHash","perCut","Menu","map","key","Modal","toggle","ModalHeader","ModalBody","Form","FormGroup","Label","htmlFor","Input","id","onChange","Footer","bottom","creatingcert","addCertificate","clgid","stuid","stu_aadhar_no","certhash","certname","stuadd","stu_id","stu_name","cllg_id","certcount","AllStuComponent","addStudent","stuname","Main","componentDidMount","eth","getAccounts","getBalance","net","getId","networkId","deployedNetwork","BNContract","networks","instance","Contract","abi","address","collegecnt","call","response","i","colId","rex","push","allcoll","j","length","colleges","xt","dish","studentcnt","stuId","students","stu","error","storageValue","registered","exact","path","component","App","basename","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d0718a42.chunk.js","sourcesContent":["import Web3 from \"web3\";\r\n\r\nconst getWeb3 = () =>\r\n  new Promise((resolve, reject) => {\r\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\r\n    window.addEventListener(\"load\", async () => {\r\n      // Modern dapp browsers...\r\n      if (window.ethereum) {\r\n        const web3 = new Web3(window.ethereum);\r\n        try {\r\n          // Request account access if needed\r\n          await window.ethereum.enable();\r\n          // Acccounts now exposed\r\n          resolve(web3);\r\n        } catch (error) {\r\n          reject(error);\r\n        }\r\n      }\r\n      // Legacy dapp browsers...\r\n      else if (window.web3) {\r\n        // Use Mist/MetaMask's provider.\r\n        const web3 = window.web3;\r\n        console.log(\"Injected web3 detected.\");\r\n        resolve(web3);\r\n      }\r\n      // Fallback to localhost; use dev console port by default...\r\n      else {\r\n        const provider = new Web3.providers.HttpProvider(\r\n          \"http://127.0.0.1:8545\"\r\n        );\r\n        const web3 = new Web3(provider);\r\n        console.log(\"No web3 instance injected, using Local web3.\");\r\n        resolve(web3);\r\n      }\r\n    });\r\n  });\r\n\r\nexport default getWeb3;\r\n","import React, { Component } from 'react';\r\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem } from 'reactstrap';\r\nimport { BrowserRouter, NavLink } from 'react-router-dom';\r\nimport Web3 from \"web3\";\r\nimport '../App.css'\r\nvar util;\r\nvar util1;\r\n\r\nclass Header extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = { isNavOpen : false }\r\n        this.togglenav = this.togglenav.bind(this);\r\n\r\n    }\r\n\r\n    togglenav(){\r\n        this.setState({isNavOpen : !this.state.isNavOpen});\r\n    }\r\n    conver = async (x) => {\r\n\r\n        util =  (Web3.utils.toWei(x, 'milli'));\r\n    }\r\n    converb = async (x) => {\r\n        util1 = (Web3.utils.fromWei(x, 'milli'));\r\n    }\r\n    render(){\r\n        \r\n        return(\r\n            <React.Fragment>\r\n                <Navbar dark expand=\"md\">\r\n                    <div className=\"container justify-center\">\r\n                    \r\n                        <NavbarToggler onClick={this.togglenav}/>\r\n                        <NavbarBrand className=\"mr-auto\" >CERTICHAIN</NavbarBrand>\r\n                        <Collapse isOpen = {this.state.isNavOpen} navbar>\r\n                        \r\n                            <Nav navbar className=\"m-auto\">\r\n                            \r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" style={{width:200,justifyContent:'space-around'}} to=\"/home\">Home</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                 <NavLink className=\"nav-link\" style={{width:200,justifyContent:'space-around'}} to=\"/allclg\">All College</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                 <NavLink className=\"nav-link\" style={{width:200,justifyContent:'space-around'}} to=\"/mystu\">My Student</NavLink>\r\n                            </NavItem> \r\n                            </Nav>\r\n                            \r\n                        </Collapse>\r\n                    </div>\r\n                    <h6 style={{ color: \"white\"}}><small>{this.props.accounts}</small>\r\n                    <br/><small>Balance : {Web3.utils.fromWei(this.props.balance.toString(), 'ether')}</small></h6>\r\n                </Navbar>\r\n            \r\n            </React.Fragment>\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport '../App.css';\r\nimport { Container } from 'reactstrap';\r\nclass Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedFile: null\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div>\r\n                    <Container>\r\n                        <h2>Welcome to Certichain</h2>\r\n                    </Container>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from 'react';\r\n//import moment from 'moment';\r\nimport {Button,Form,FormGroup,Label,Input,Col,Card,CardImg,CardTitle,CardBody,CardText,Modal,ModalHeader,ModalBody} from 'reactstrap';\r\n\r\nimport Web3 from 'web3';\r\n\r\n\r\nlet allcoll = [];\r\nlet alldocs = [];\r\nconst ETHER = 1000000000000000000;\r\n\r\nclass Allpatrender extends Component {\r\n    // let day = moment.unix(art.dateofComp);\r\n    // let xy = art.dateofComp;\r\n    // let date = new Date(xy*1000);\r\n    // let time = day.format('dddd MMMM Do YYYY, h:mm:ss a');\r\n    // let yz = xy != 0?\"bg-success text-white\":\"\";\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            docCount: 0,\r\n            art: [],\r\n            isModalOpen: false,\r\n            sellPrice: 0\r\n        };\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.togglereg = this.togglereg.bind(this);\r\n    }\r\n\r\n    togglereg = async () => {\r\n        if(this.props.art.isregistered){\r\n            const res = await this.props.contract.methods\r\n            .registerCollege(\r\n                this.props.art.clg_id,\r\n                false\r\n            )\r\n            .send({ from: this.props.accounts, gas: 1000000 });\r\n        }\r\n        else{\r\n            const res = await this.props.contract.methods\r\n            .registerCollege(\r\n                this.props.art.clg_id,\r\n                true\r\n            )\r\n            .send({ from: this.props.accounts, gas: 1000000 });\r\n     \r\n        }\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n    handleInputChange(event) {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n                let but = 'visible';\r\n                let butname = this.props.art.isregistered?'Unregister':'register';\r\n        return (\r\n                <Card >\r\n                <i className=\"fa fa-institution fa-4x\"></i>\r\n                <CardBody>\r\n                <CardTitle><small>College ID : {this.props.art.clg_id}</small></CardTitle>\r\n                <CardText><small>College Address : {this.props.art.clg_address}</small></CardText>\r\n                <CardText><small>College Name : {this.props.art.clg_name}</small></CardText>\r\n                <CardText><small>Registration Status : {this.props.art.isregistered?'True':'False'}</small></CardText>\r\n                <Button className={but} type=\"submit\" color=\"primary\" onClick={this.togglereg}>\r\n                    {butname}\r\n                </Button>\r\n                </CardBody>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nclass  AllCllgComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            docCount: 0,\r\n            art: [],\r\n            cust: [],\r\n            manuf: [],\r\n            clgname: '',\r\n            isModalOpen1: false,\r\n            title: '',\r\n            artUrl: '',\r\n            price: '',\r\n            artHash: '',\r\n            perCut: 0\r\n        };\r\n        this.toggleModal1 = this.toggleModal1.bind(this);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.fileSelectHandler = this.fileSelectHandler.bind(this);\r\n        this.creatingItems = this.creatingItems.bind(this);\r\n\r\n\r\n    }\r\n\r\n    toggleModal1() {\r\n        this.setState({\r\n            isModalOpen1: !this.state.isModalOpen1\r\n        });\r\n    }\r\n\r\n    creatingItems = async () => {\r\n       \r\n       \r\n        const res = await this.props.contract.methods\r\n            .addCollege(\r\n                this.state.clgname\r\n            )\r\n            .send({ from: this.props.accounts, gas: 1000000 });\r\n        console.log(res);\r\n        console.log(this.state.clgname);\r\n        this.toggleModal1();\r\n    };\r\n\r\n    handleInputChange(event) {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    async componentDidMount() {\r\n        \r\n    }\r\n\r\n    fileSelectHandler = (event) => {\r\n        console.log(event.target.files);\r\n        this.setState({\r\n            selectedFile: event.target.files[0]\r\n        });\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const Menu = this.props.art?.map((x) => {\r\n            return (\r\n                <div key={x} className='col-4 col-md-3'>\r\n                    <Allpatrender\r\n                        art={x}\r\n                        contract={this.props.contract}\r\n                        accounts={this.props.accounts}\r\n                    />\r\n                    <br />\r\n                    <br />\r\n                </div>\r\n            );\r\n        });\r\n\r\n        let ch = 'visible';\r\n        return (\r\n            <div className='container'>\r\n                <h2>All College</h2>\r\n                <Button\r\n                    color='success'\r\n                    className={ch}\r\n                    onClick={this.toggleModal1}>\r\n                    Add College\r\n                </Button>\r\n\r\n                <Modal\r\n                    isOpen={this.state.isModalOpen1}\r\n                    toggle={this.toggleModal1}\r\n                    className='modal-xl'>\r\n                    <ModalHeader toggle={this.toggleModal1}>\r\n                        <h3>Add College</h3>\r\n                    </ModalHeader>\r\n                    <ModalBody>\r\n                        <Form>\r\n                            <div className='row pl-5 pr-5'>\r\n                                <div className='col-6'>\r\n                                    <FormGroup>\r\n                                        <Label htmlFor='title' className='ml-3'>\r\n                                            College Name\r\n                                        </Label>\r\n                                        <Input\r\n                                            type='text'\r\n                                            id='clgname'\r\n                                            name='clgname'\r\n                                            onChange={this.handleInputChange}\r\n                                        />\r\n                                    </FormGroup>\r\n                                </div>\r\n                               \r\n                            </div>\r\n                           \r\n                            <br />\r\n                            <div className='row pl-5'>\r\n                                <div className='col-6'>\r\n                                    <Button\r\n                                        color='primary'\r\n                                        onClick={this.creatingItems}\r\n                                        >\r\n                                        Add\r\n                                    </Button>\r\n                                </div>\r\n                            </div>\r\n                            <br />\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n                <br />\r\n                <br />\r\n                <div className='row'>{Menu}</div>\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AllCllgComponent;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Footer(props){\r\n    return(\r\n        <div className=\"footer\">\r\n        <div className=\"container\" style={{bottom:0}}>\r\n            \r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-auto\">\r\n                    <p>© Copyright @2021 KOLE</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\n//import moment from 'moment';\r\nimport {Button,Form,FormGroup,Label,Input,Col,Card,CardImg,CardTitle,CardBody,CardText,Modal,ModalHeader,ModalBody} from 'reactstrap';\r\n\r\nimport Web3 from 'web3';\r\n\r\n\r\nlet allcoll = [];\r\nlet alldocs = [];\r\nconst ETHER = 1000000000000000000;\r\n\r\nclass Allpatrender extends Component {\r\n    // let day = moment.unix(art.dateofComp);\r\n    // let xy = art.dateofComp;\r\n    // let date = new Date(xy*1000);\r\n    // let time = day.format('dddd MMMM Do YYYY, h:mm:ss a');\r\n    // let yz = xy != 0?\"bg-success text-white\":\"\";\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            docCount: 0,\r\n            art: [],\r\n            isModalOpen: false,\r\n            sellPrice: 0,\r\n            clgid:0,\r\n            stuid : 0,\r\n            certname : '',\r\n            stuadd : 0,\r\n            certhash : '',\r\n        };\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.togglereg = this.togglereg.bind(this);\r\n    }\r\n\r\n    togglereg = async () => {\r\n        if(this.props.art.isregistered){\r\n            const res = await this.props.contract.methods\r\n            .registerCollege(\r\n                this.props.art.clg_id,\r\n                false\r\n            )\r\n            .send({ from: this.props.accounts, gas: 1000000 });\r\n        }\r\n        else{\r\n            const res = await this.props.contract.methods\r\n            .registerCollege(\r\n                this.props.art.clg_id,\r\n                true\r\n            )\r\n            .send({ from: this.props.accounts, gas: 1000000 });\r\n     \r\n        }\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n    creatingcert = async () => {\r\n\r\n        const res = await this.props.contract.methods\r\n            .addCertificate(\r\n                this.state.clgid,\r\n                this.state.stuid,\r\n                this.props.art.stu_aadhar_no,\r\n                this.state.certhash,\r\n                this.state.certname\r\n            )\r\n            .send({ from: this.props.accounts, gas: 1000000 });\r\n\r\n        this.toggleModal();\r\n    };\r\n    handleInputChange(event) {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n                let but = 'visible';\r\n                let butname = 'Add Certficate';\r\n        return (\r\n                <Card >\r\n                <i className=\"fa fa-user-circle-o fa-4x\"></i>\r\n                <CardBody>\r\n                <CardTitle><small>Student ID : {this.props.art.stu_id}</small></CardTitle>\r\n                <CardText><small>Student Adhar no : {this.props.art.stu_aadhar_no}</small></CardText>\r\n                <CardText><small>Student Name : {this.props.art.stu_name}</small></CardText>\r\n                <CardText><small>College Id : {this.props.art.cllg_id}</small></CardText>\r\n                <CardText><small>Certificate Count : {this.props.art.certcount}</small></CardText>\r\n                <Button className={but} type=\"submit\" color=\"primary\" onClick={this.toggleModal}>\r\n                    {butname}\r\n                </Button>\r\n                <Modal\r\n                    isOpen={this.state.isModalOpen}\r\n                    toggle={this.toggleModal}\r\n                    className='modal-xl'>\r\n                    <ModalHeader toggle={this.toggleModal}>\r\n                        <h3>Add Certificate</h3>\r\n                    </ModalHeader>\r\n                    <ModalBody>\r\n                        <Form>\r\n                            <div className='row pl-5 pr-5'>\r\n                                <div className='col-3'>\r\n                                    <FormGroup>\r\n                                        <Label htmlFor='title' className='ml-3'>\r\n                                             College ID\r\n                                        </Label>\r\n                                        <Input\r\n                                            type='number'\r\n                                            id='clgid'\r\n                                            name='clgid'\r\n                                            onChange={this.handleInputChange}\r\n                                        />\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className='col-3'>\r\n                                    <FormGroup>\r\n                                        <Label htmlFor='title' className='ml-3'>\r\n                                             Student ID\r\n                                        </Label>\r\n                                        <Input\r\n                                            type='number'\r\n                                            id='stuid'\r\n                                            name='stuid'\r\n                                            onChange={this.handleInputChange}\r\n                                        />\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className='col-6'>\r\n                                    <FormGroup>\r\n                                        <Label htmlFor='title' className='ml-3'>\r\n                                             Certificate Name\r\n                                        </Label>\r\n                                        <Input\r\n                                            type='text'\r\n                                            id='certname'\r\n                                            name='certname'\r\n                                            onChange={this.handleInputChange}\r\n                                        />\r\n                                    </FormGroup>\r\n                                </div>\r\n                            </div>\r\n                           \r\n                            <br />\r\n                            <div className='row pl-5 pr-5'>\r\n                               \r\n                                <div className='col-6'>\r\n                                    <FormGroup>\r\n                                        <Label htmlFor='title' className='ml-3'>\r\n                                            Hash\r\n                                        </Label>\r\n                                        <Input\r\n                                            type='text'\r\n                                            id='certhash'\r\n                                            name='certhash'\r\n                                            onChange={this.handleInputChange}\r\n                                        />\r\n                                    </FormGroup>\r\n                                </div>\r\n                            </div>\r\n                            <br/>\r\n                            <div className='row pl-5'>\r\n                                <div className='col-6'>\r\n                                    <Button\r\n                                        color='primary'\r\n                                        onClick={this.creatingcert}\r\n                                        >\r\n                                        Add\r\n                                    </Button>\r\n                                </div>\r\n                            </div>\r\n                            <br />\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n                </CardBody>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nclass  AllStuComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            docCount: 0,\r\n            art: [],\r\n            cust: [],\r\n            manuf: [],\r\n            clgname: '',\r\n            isModalOpen1: false,\r\n            title: '',\r\n            clgid : 0,\r\n            stuname : '',\r\n            stuadd : '',\r\n            artUrl: '',\r\n            price: '',\r\n            artHash: '',\r\n            perCut: 0\r\n        };\r\n        this.toggleModal1 = this.toggleModal1.bind(this);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.fileSelectHandler = this.fileSelectHandler.bind(this);\r\n        this.creatingItems = this.creatingItems.bind(this);\r\n\r\n\r\n    }\r\n\r\n    toggleModal1() {\r\n        this.setState({\r\n            isModalOpen1: !this.state.isModalOpen1\r\n        });\r\n    }\r\n\r\n    creatingItems = async () => {\r\n       \r\n       \r\n        const res = await this.props.contract.methods\r\n            .addStudent(\r\n                this.state.clgid,\r\n                this.state.stuadd,\r\n                this.state.stuname\r\n            )\r\n            .send({ from: this.props.accounts, gas: 1000000 });\r\n\r\n        this.toggleModal1();\r\n    };\r\n\r\n    handleInputChange(event) {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    async componentDidMount() {\r\n        \r\n    }\r\n\r\n    fileSelectHandler = (event) => {\r\n        console.log(event.target.files);\r\n        this.setState({\r\n            selectedFile: event.target.files[0]\r\n        });\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const Menu = this.props.art?.map((x) => {\r\n            return (\r\n                <div key={x} className='col-4 col-md-3'>\r\n                    <Allpatrender\r\n                        art={x}\r\n                        contract={this.props.contract}\r\n                        accounts={this.props.accounts}\r\n                    />\r\n                    <br />\r\n                    <br />\r\n                </div>\r\n            );\r\n        });\r\n\r\n        let ch = 'visible';\r\n        return (\r\n            <div className='container'>\r\n                <h2>My Students</h2>\r\n                <Button\r\n                    color='success'\r\n                    className={ch}\r\n                    onClick={this.toggleModal1}>\r\n                    Add Student\r\n                </Button>\r\n\r\n                <Modal\r\n                    isOpen={this.state.isModalOpen1}\r\n                    toggle={this.toggleModal1}\r\n                    className='modal-xl'>\r\n                    <ModalHeader toggle={this.toggleModal1}>\r\n                        <h3>Add Student</h3>\r\n                    </ModalHeader>\r\n                    <ModalBody>\r\n                        <Form>\r\n                            <div className='row pl-5 pr-5'>\r\n                                <div className='col-3'>\r\n                                    <FormGroup>\r\n                                        <Label htmlFor='title' className='ml-3'>\r\n                                             College ID\r\n                                        </Label>\r\n                                        <Input\r\n                                            type='number'\r\n                                            id='clgid'\r\n                                            name='clgid'\r\n                                            onChange={this.handleInputChange}\r\n                                        />\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className='col-3'>\r\n                                    <FormGroup>\r\n                                        <Label htmlFor='title' className='ml-3'>\r\n                                             Student Aadhar\r\n                                        </Label>\r\n                                        <Input\r\n                                            type='number'\r\n                                            id='stuadd'\r\n                                            name='stuadd'\r\n                                            onChange={this.handleInputChange}\r\n                                        />\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className='col-6'>\r\n                                    <FormGroup>\r\n                                        <Label htmlFor='title' className='ml-3'>\r\n                                             Student Name\r\n                                        </Label>\r\n                                        <Input\r\n                                            type='text'\r\n                                            id='stuname'\r\n                                            name='stuname'\r\n                                            onChange={this.handleInputChange}\r\n                                        />\r\n                                    </FormGroup>\r\n                                </div>\r\n                            </div>\r\n                           \r\n                            <br />\r\n                            <div className='row pl-5'>\r\n                                <div className='col-6'>\r\n                                    <Button\r\n                                        color='primary'\r\n                                        onClick={this.creatingItems}\r\n                                        >\r\n                                        Add\r\n                                    </Button>\r\n                                </div>\r\n                            </div>\r\n                            <br />\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n                <br />\r\n                <br />\r\n                <div className='row'>{Menu}</div>\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AllStuComponent;\r\n","import React, { Component } from \"react\";\r\nimport BNContract from \"../contracts/Certificates.json\";\r\nimport getWeb3 from \"../getWeb3\";\r\nimport \"../App.css\";\r\nimport Header from \"./HeaderComponent\";\r\nimport Home from './HomeComponent';\r\n// import SignUp from \"./SignUpComponent\";\r\n import  AllCllgComponent  from \"./AllCollegeComponent\";\r\n// import Shipment from \"./ShipmentComponent\";\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport Footer from './FooterComponent';\r\n// import RegisterComp from './RegisterComponent';\r\n\r\nimport AllStuComponent from './AllStudentComponent';\r\n\r\n\r\nclass Main extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { storageValue: 0, web3: null, accounts: null,balance:0, contract: null ,res : null,dish : null,stu:null};\r\n }\r\n\r\n  componentDidMount = async () => {\r\n    try {\r\n      // Get network provider and web3 instance.\r\n      const web3 = await getWeb3();\r\n\r\n      // Use web3 to get the user's accounts.\r\n      const accounts = await web3.eth.getAccounts();\r\n      const balance = await web3.eth.getBalance(accounts[0]);\r\n      // Get the contract instance.\r\n      const networkId = await web3.eth.net.getId();\r\n      const deployedNetwork = BNContract.networks[networkId];\r\n      const instance = new web3.eth.Contract(\r\n        BNContract.abi,\r\n        deployedNetwork && deployedNetwork.address,\r\n      );\r\n      // Set web3, accounts, and contract to the state, and then proceed with an\r\n      // example of interacting with the contract's methods.\r\n      console.log(instance)\r\n      this.setState({ web3, accounts : accounts[0] , contract: instance,balance});\r\n      var res = await this.state.contract?.methods.collegecnt().call();\r\n      console.log(res);\r\n             \r\n      var response= [];\r\n      for(var i=1;i<=res;i++){\r\n          var rex = await this.state.contract?.methods.colId(i).call();\r\n          response.push(rex);\r\n      }\r\n      console.log(response);\r\n      let allcoll = [];\r\n      for(var j=0;j<response.length;j++){\r\n          var xt = await this.state.contract.methods.colleges(response[j]).call();\r\n          allcoll.push(xt);\r\n       \r\n      }\r\n      console.log(allcoll);\r\n      this.setState({ dish : allcoll});\r\n\r\n      var res = await this.state.contract?.methods.studentcnt().call();\r\n      console.log(res);\r\n             \r\n      var response= [];\r\n      for(var i=1;i<=res;i++){\r\n          var rex = await this.state.contract?.methods.stuId(i).call();\r\n          response.push(rex);\r\n      }\r\n      console.log(response);\r\n      allcoll = [];\r\n      for(var j=0;j<response.length;j++){\r\n          var xt = await this.state.contract.methods.students(response[j]).call();\r\n          allcoll.push(xt);\r\n       \r\n      }\r\n      console.log(allcoll);\r\n      this.setState({ stu : allcoll});\r\n      \r\n    } catch (error) {\r\n      // Catch any errors for any of the above operations.\r\n      \r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  \r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Header contract={this.state.contract} accounts={this.state.accounts} registered = {this.state.registered} balance={this.state.balance} web3={this.state.web3}/>\r\n        <Switch>\r\n            <Route exact path=\"/home\" component={() => <Home contract={this.state.contract} accounts={this.state.accounts}/>}/>\r\n            <Route exact path='/allclg' component={() => (< AllCllgComponent art = {this.state.dish} contract={this.state.contract} accounts={this.state.accounts}/>)}/>\r\n            <Route exact path='/mystu' component={() => (< AllStuComponent art = {this.state.stu} contract={this.state.contract} accounts={this.state.accounts}/>)}/>\r\n            <Redirect to=\"/home\"/>\r\n        </Switch>\r\n        <Footer/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Main;","\r\nimport React, { Component } from \"react\";\r\nimport Main from './Components/MainComponents.js';\r\nimport {HashRouter,BrowserRouter} from 'react-router-dom';\r\nclass App extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <HashRouter basename=\"/\">\r\n      <div className=\"App\">\r\n        <Main />\r\n      </div>\r\n      </HashRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport 'bootstrap-social/bootstrap-social.css'\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}